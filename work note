
绕过谷歌商店下载谷歌插件 http://chrome-extension-downloader.com/

淘宝镜像：  --registry=https://registry.npm.taobao.org
npm install -g cnpm --registry=https://registry.npm.taobao.org


在线部署接口：
http://rapapi.org/workspace/myWorkspace.do?projectId=22545#218102 
wuxiaobai wyf


sublime文件查找排除：
【】【】【】【】【】【】【】【】【】【】
D:\Projects\ 
表示在该目录下寻找，也可以写多个目录

*.cs 
表示找 cs 后缀的文件，也可以写多个后缀

-/*Debug/* 
表示排除 Debug 文件夹内的所有文件

-*.cache 
表示排除 cache 后缀的文件
【】【】【】【】【】【】【】【】【】【】

/********************************************************************************************/

项目经常使用到的方法：

/********************************************************************************************/
pageInfoService.pushCancelTimeout($timeout(function() {
                $("#mydeposit").html(data.bankOpenAccount);
            }, time));
            
  
 /********************************************************************************************/           
 UserService.getUserInfo('complete', 'email', function(email) {
          console.log("email",email);
          $scope.email = email;
       }); 
     
   
   
 /********************************************************************************************/
 BaseService.setErrorMas(true, 'xxxxxxxxxxxxxxxxxxxxx');
 
 /*******************************************************************************************/
 BaseService.dialogNew(true, {
                  updialogType: 'channel',
                  dialogHtml: '<h3 class="f17 c31 text-center">' + publicMEG.getMeg("TIPS") + '</h3><p class="f15 c31   text-center mt_5">请至PC端完成资料上传</p>',
                  dialogRightEven: function() {
                      BaseService.dialogNew(false);
                  }
   })



腾讯第二季度报表的h5 动画效果：
http://cdn.ir.tencent.com/ir/source20170816/index_c.html

 
mogodb:
https://www.kancloud.cn/kancloud/create-voting-app/63989

快速启动mogodb:

http://www.yiibai.com/mongodb/mongodb_quick_guide.html

D:\software\MongoDB\Server\3.0\bin>mongod.exe --dbpath "E:\workSpace\mogodbData" 
D:\software\MongoDB\Server\3.0\bin>mongo.exe

use reactNote



身份证校验：

// 身份证
function isIdCard(idCard) {
    //15位和18位身份证号码的正则表达式
    var regIdCard = /^(^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$)|(^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])((\d{4})|\d{3}[Xx])$)$/;
    //如果通过该验证，说明身份证格式正确，但准确性还需计算
    if (regIdCard.test(idCard)) {
        if (idCard.length == 18) {
            var idCardWi = new Array(7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2); //将前17位加权因子保存在数组里
            var idCardY = new Array(1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2); //这是除以11后，可能产生的11位余数、验证码，也保存成数组
            var idCardWiSum = 0; //用来保存前17位各自乖以加权因子后的总和
            for (var i = 0; i < 17; i++) {
                idCardWiSum += idCard.substring(i, i + 1) * idCardWi[i];
            }
            var idCardMod = idCardWiSum % 11; //计算出校验码所在数组的位置
            var idCardLast = idCard.substring(17); //得到最后一位身份证号码
            //如果等于2，则说明校验码是10，身份证号码最后一位应该是X
            if (idCardMod == 2) {
                if (idCardLast == "X" || idCardLast == "x") {
                    return true;
                } else {
                    return false;
                }
            } else {
                //用计算出的验证码与最后一位身份证号码匹配，如果一致，说明通过，否则是无效的身份证号码
                if (idCardLast == idCardY[idCardMod]) {
                    return true;
                } else {
                    return false;
                }
            }
        }
    } else {
        return false;
    }
    return true;
}

